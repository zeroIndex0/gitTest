// I thought I might want to store these online somewhere.
// I also run an extension called Center Editor Window which gives me the nice ctrl+l feature
// Paste everything below into vscode's `keybindings.json` file

// Place your key bindings in this file to overwrite the defaults
[
  {
      "key": "ctrl+a",
      "command": "cursorLineStart", "when": "textInputFocus"
  },
  {
      "key": "ctrl+e",
      "command": "cursorLineEnd", "when": "textInputFocus"
  },
  {
      "key": "ctrl+p",
      "command": "cursorUp",
      "when": "textInputFocus"
  },
  {
      "key": "up",
      "command": "-cursorUp",
      "when": "textInputFocus"
  },
  {
      "key": "ctrl+m",
      "command": "workbench.action.files.newUntitledFile"
  },
  {
      "key": "ctrl+n",
      "command": "-workbench.action.files.newUntitledFile"
  },
  {
      "key": "ctrl+n",
      "command": "cursorDown",
      "when": "textInputFocus"
  },
  {
      "key": "down",
      "command": "-cursorDown",
      "when": "textInputFocus"
  },
  {
      "key": "ctrl+b",
      "command": "cursorLeft",
      "when": "textInputFocus"
  },
  {
      "key": "left",
      "command": "-cursorLeft",
      "when": "textInputFocus"
  },
  {
      "key": "alt+f",
      "command": "actions.find"
  },
  {
      "key": "ctrl+f",
      "command": "-actions.find"
  },
  {
      "key": "ctrl+f",
      "command": "cursorRight",
      "when": "textInputFocus"
  },
  {
      "key": "right",
      "command": "-cursorRight",
      "when": "textInputFocus"
  },
  {
      "key": "ctrl+shift+down",
      "command": "-cursorDownSelect",
      "when": "textInputFocus"
  },
  {   "key": "down",
      "command": "cursorDown",
      "when": "textInputFocus" 
  },
  {   "key": "up",
      "command": "cursorUp",
      "when": "textInputFocus" 
  },
  {   "key": "left",
      "command": "cursorLeft",
      "when": "textInputFocus" 
  },
  {   "key": "right",
      "command": "cursorRight",
      "when": "textInputFocus" 
  },
  {
      "key": "alt+d",
      "command": "editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
  },
  {
      "key": "ctrl+d",
      "command": "-editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
  },
  {   "key": "ctrl+d",
      "command": "deleteRight",
      "when": "textInputFocus && !editorReadonly" 
  },
  {
      "key": "ctrl+p",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetVisible"
  },
  {
      "key": "ctrl+n",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetVisible"
  },
  {
      "key": "shift+end",
      "command": "cursorEndSelect",
      "when": "textInputFocus"
  },
  {
      "key": "shift+end",
      "command": "-cursorEndSelect",
      "when": "textInputFocus"
  },
  {
      "key": "shift+home",
      "command": "cursorHomeSelect",
      "when": "textInputFocus"
  },
  {
      "key": "shift+home",
      "command": "-cursorHomeSelect",
      "when": "textInputFocus"
  },
  {
      "key": "ctrl+shift+left",
      "command": "cursorWordLeftSelect"
  },
  {
      "key": "ctrl+shift+right",
      "command": "cursorWordRightSelect"
  },
  {
      "key": "ctrl+shift+b",
      "command": "cursorWordLeftSelect"
  },
  {
      "key": "ctrl+shift+f",
      "command": "cursorWordRightSelect"
  },
  {
      "key": "alt+shift+p",
      "command": "cursorUpSelect"
  },
  {
      "key": "alt+shift+n",
      "command": "cursorDownSelect"
  },
  {
      "key": "alt+shift+b",
      "command": "cursorLeftSelect"
  },
  {
      "key": "alt+shift+f",
      "command": "cursorRightSelect"
  },
  {
      "key": "ctrl+shift+alt+f",
      "command": "editor.action.formatDocument",
      "when": "editorTextFocus && !editorReadonly"
  },
  {
      "key": "shift+alt+f",
      "command": "-editor.action.formatDocument",
      "when": "editorTextFocus && !editorReadonly"
  }
]